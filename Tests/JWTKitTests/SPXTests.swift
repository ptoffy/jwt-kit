import JWTKit
import XCTest

final class SPXTests: XCTestCase {
    func testSPXSigner() async throws {
        let privateKey = SPX.PrivateKey()
        let keyCollection = await JWTKeyCollection().addSPX(key: privateKey)

        let payload = TestPayload(
            sub: "vapor",
            name: "Foo",
            admin: false,
            exp: .init(value: .init(timeIntervalSince1970: 2_000_000_000))
        )

        let privateSigned = try await keyCollection.sign(payload)
        try await XCTAssertEqualAsync(await keyCollection.verify(privateSigned, as: TestPayload.self), payload)
    }

    func testSPXPEM() async throws {
        let seed: [UInt8] = Array("0123456789abcdef0123456789abcdef0123456789abcdef".utf8)

        let privateKey = try SPX.PrivateKey(seed: seed)

        let keyCollection = await JWTKeyCollection()
            .addSPX(key: privateKey, kid: "private")

        let payload = TestPayload(
            sub: "vapor",
            name: "Foo",
            admin: false,
            exp: .init(value: .init(timeIntervalSince1970: 2_000_000_000))
        )

        let privateSigned = try await keyCollection.sign(payload)
        try await XCTAssertEqualAsync(await keyCollection.verify(privateSigned, as: TestPayload.self), payload)
    }

    func testVerifyOutsideToken() async throws {
        let seed: [UInt8] = Array("0123456789abcdef0123456789abcdef0123456789abcdef".utf8)
        let key = try SPX.PrivateKey(seed: seed)

        let keyCollection = await JWTKeyCollection()
            .addSPX(key: key)

        let payload = TestPayload(
            sub: "vapor",
            name: "Foo",
            admin: false,
            exp: .init(value: .init(timeIntervalSince1970: 2_000_000_000))
        )

        try await XCTAssertEqualAsync(await keyCollection.verify(outsideToken, as: TestPayload.self), payload)
    }

    let spx128sPrivateKey = """
    -----BEGIN PRIVATE KEY-----
    Jyl8Ef+FbvH9voZx/Y0kM+VNs3SNYw/PqLX47eN5haokJW+Qx/7+5KAevFwGhDGR
    Q8DmXAf+gNKuOxQHmEOcMg==
    -----END PRIVATE KEY-----
    """

    let spx128sPublicKey = """
    -----BEGIN PUBLIC KEY-----
    JCVvkMf+/uSgHrxcBoQxkUPA5lwH/oDSrjsUB5hDnDI=
    -----END PUBLIC KEY-----
    """

    let outsideToken = """
    eyJhbGciOiAiU1BISU5DUysxMjhzIiwgInR5cCI6ICJKV1QifQ.eyJzdWIiOiAidmFwb3IiLCAibmFtZSI6ICJGb28iLCAiYWRtaW4iOiBmYWxzZSwgImV4cCI6IDIwMDAwMDAwMDB9.
    """
}
